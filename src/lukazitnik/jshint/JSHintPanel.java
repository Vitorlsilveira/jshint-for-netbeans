package lukazitnik.jshint;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import org.openide.filesystems.FileUtil;
import org.openide.modules.InstalledFileLocator;
import org.openide.util.NbPreferences;

final class JSHintPanel extends javax.swing.JPanel {

    class JSFilesOnlyFilter extends FileFilter {

        @Override
        public boolean accept(File file) {
            return file.isDirectory() || FileUtil.toFileObject(file).getMIMEType().equals("text/javascript");
        }

        @Override
        public String getDescription() {
            return "JavaScript Files";
        }
    }

    private final JSHintOptionsPanelController controller;
    private final String defaultJSFile = InstalledFileLocator.getDefault().locate("jshint.js", "lukazitnik.jshint", false).getPath();

    JSHintPanel(JSHintOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        optionsPanel = new javax.swing.JPanel();
        jSFileLabel = new javax.swing.JLabel();
        jSFileTextField = new javax.swing.JTextField();
        defaultJSFileButton = new javax.swing.JButton();
        browseForJSFileButton = new javax.swing.JButton();

        fileChooser.setDialogTitle(org.openide.util.NbBundle.getMessage(JSHintPanel.class, "JSHintPanel.fileChooser.dialogTitle")); // NOI18N
        fileChooser.setFileFilter(new JSFilesOnlyFilter());

        setPreferredSize(new java.awt.Dimension(600, 58));

        org.openide.awt.Mnemonics.setLocalizedText(jSFileLabel, org.openide.util.NbBundle.getMessage(JSHintPanel.class, "JSHintPanel.jSFileLabel.text")); // NOI18N

        jSFileTextField.setText(org.openide.util.NbBundle.getMessage(JSHintPanel.class, "JSHintPanel.jSFileTextField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(defaultJSFileButton, org.openide.util.NbBundle.getMessage(JSHintPanel.class, "JSHintPanel.defaultJSFileButton.text")); // NOI18N
        defaultJSFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultJSFileButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(browseForJSFileButton, org.openide.util.NbBundle.getMessage(JSHintPanel.class, "JSHintPanel.browseForJSFileButton.text")); // NOI18N
        browseForJSFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseForJSFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionsPanelLayout = new javax.swing.GroupLayout(optionsPanel);
        optionsPanel.setLayout(optionsPanelLayout);
        optionsPanelLayout.setHorizontalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSFileLabel)
                .addGap(18, 18, 18)
                .addComponent(jSFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browseForJSFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(defaultJSFileButton)
                .addContainerGap())
        );
        optionsPanelLayout.setVerticalGroup(
            optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSFileLabel)
                    .addComponent(jSFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defaultJSFileButton)
                    .addComponent(browseForJSFileButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(optionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void defaultJSFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultJSFileButtonActionPerformed
        jSFileTextField.setText(defaultJSFile);
    }//GEN-LAST:event_defaultJSFileButtonActionPerformed

    private void browseForJSFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseForJSFileButtonActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            jSFileTextField.setText(file.getPath());
        }
    }//GEN-LAST:event_browseForJSFileButtonActionPerformed

    void load() {
         jSFileTextField.setText(NbPreferences.forModule(JSHintPanel.class).get("jshint.js", defaultJSFile));
    }

    void store() {
         NbPreferences.forModule(JSHintPanel.class).put("jshint.js", jSFileTextField.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseForJSFileButton;
    private javax.swing.JButton defaultJSFileButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jSFileLabel;
    private javax.swing.JTextField jSFileTextField;
    private javax.swing.JPanel optionsPanel;
    // End of variables declaration//GEN-END:variables
}
